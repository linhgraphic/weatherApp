{"version":3,"sources":["components/input/index.jsx","constants/index.js","components/form/index.jsx","components/WeatherIcon/index.jsx","components/CurrentWeather/index.jsx","components/WeatherCard/index.jsx","components/DailyWeather/index.jsx","components/ForecastWeather/index.jsx","components/Loader/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","props","react_default","a","createElement","className","label","htmlFor","id","Object","assign","checked","disabled","type","value","placeholder","onChange","onBlur","name","API_KEY","Form","onSubmit","children","WeatherIcon","src","concat","image","icon","alt","description","CurrentWeather","city","components_WeatherIcon","data","weather","main","temp","units","humidity","clouds","all","WeatherCard","DailyWeather","days","tempData","dataArray","today","Date","getDay","i","j","push","components_WeatherCard","map","index","key","ForecastWeather","components_DailyWeather","list","Loader","open","class","App","state","loading","error","weatherData","currentWeather","forecastWeather","event","_this$setState","_this","setState","defineProperty","target","onChangeCheckbox","preventDefault","forecastData","fetch","window","location","protocol","then","res","ok","json","currentUnits","currentCity","catch","components_Loader","this","components_form","components_input","components_CurrentWeather","components_ForecastWeather","message","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1a16641.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./input.css\";\r\n\r\nconst Input = (props) => (\r\n  <div className=\"ip\">\r\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\r\n    <input\r\n      checked={props.checked}\r\n      disabled={props.disabled}\r\n      type={props.type || \"text\"}\r\n      className={props.className}\r\n      value={props.value}\r\n      id={props.id}\r\n      placeholder={props.placeholder}\r\n      onChange={props.onChange}\r\n      onBlur={props.onBlur}\r\n      name={props.name}\r\n      {...props}\r\n    />\r\n  </div>\r\n);\r\nexport default Input;\r\n","export const API_KEY = \"de5f8ae62cbbca76711831cf28072c18\";\r\n","import React from \"react\";\r\nconst Form = props => (\r\n  <form onSubmit={props.onSubmit} className={props.className}>\r\n    {props.children}\r\n  </form>\r\n);\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst WeatherIcon = props => (\r\n  <img\r\n    src={`http://openweathermap.org/img/w/${props.image.icon}.png`}\r\n    alt={props.image.description}\r\n  />\r\n);\r\n\r\nexport default WeatherIcon;\r\n","import React from \"react\";\r\nimport WeatherIcon from \"../WeatherIcon\";\r\nimport \"./CurrentWeather.css\";\r\n\r\nconst CurrentWeather = (props) => {\r\n  return (\r\n    <div className=\"current-weather\">\r\n      <h1>Current weather in {props.city} is:</h1>\r\n      <WeatherIcon image={props.data.weather[0]} />\r\n      <p>{`Temparature: ${props.data.main.temp}${\r\n        props.units === \"metric\" ? \"°C\" : \"F\"\r\n      }`}</p>\r\n      <p>{`Humidity: ${props.data.main.humidity}%`}</p>\r\n      <p>{`Cloud: ${props.data.clouds.all}%`}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport \"./WeatherCard.css\";\r\nimport WeatherIcon from \"../WeatherIcon\";\r\n\r\nconst WeatherCard = (props) => {\r\n  return (\r\n    <div className=\"weather-card\">\r\n      <WeatherIcon image={props.data.weather[0]} />\r\n      <div>\r\n        {props.data.main.temp}\r\n        {props.units === \"metric\" ? \"°C\" : \"F\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\nimport WeatherCard from \"../WeatherCard\";\r\nimport \"./DailyWeather.css\";\r\n\r\nconst DailyWeather = (props) => {\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  let tempData = [];\r\n  const dataArray = [];\r\n  let today = new Date().getDay();\r\n  for (let i = 0; i < 40; i += 8) {\r\n    today = today < +6 ? 0 : today++;\r\n    for (let j = 0; j < 8; j++) {\r\n      tempData.push(\r\n        <WeatherCard data={props.data[i + j]} units={props.units} />\r\n      );\r\n    }\r\n    dataArray.push(tempData);\r\n    tempData = [];\r\n  }\r\n\r\n  return dataArray.map((data, index) => {\r\n    return (\r\n      <div>\r\n        <h3>{days[today++]} </h3>\r\n        <div className=\"daily-weather\">\r\n          <div key={index}>{data}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default DailyWeather;\r\n","import React from \"react\";\r\nimport DailyWeather from \"../DailyWeather\";\r\nimport \"./ForecastWeather.css\";\r\n\r\nconst ForecastWeather = (props) => {\r\n  return (\r\n    <div className=\"forecast-weather\">\r\n      <h2>\r\n        The temperature in {props.city} per 3 hours within the next 5 days is:{\" \"}\r\n      </h2>\r\n      <div className=\"temperature\">\r\n        <DailyWeather data={props.data.list} units={props.units} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ForecastWeather;\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = props => (\r\n  <div className={`overlay${props.open ? \" open\" : \"\"}`}>\r\n    <div class=\"lds-spinner\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/input/input.css\";\nimport Input from \"./components/input\";\nimport { API_KEY } from \"./constants\";\nimport Form from \"./components/form\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport ForecastWeather from \"./components/ForecastWeather\";\nimport Loader from \"./components/Loader\";\n\nclass App extends Component {\n  state = {\n    loading: false,\n    error: null,\n    weatherData: null,\n    city: \"\",\n    currentWeather: true,\n    forecastWeather: true,\n    units: \"metric\",\n  };\n  onChange = (event) => {\n    this.setState({\n      [event.target.name || event.target.id]: event.target.value,\n      error: null,\n    });\n  };\n  onChangeCheckbox = (event) => {\n    this.setState({\n      [event.target.name || event.target.id]: !this.state[\n        event.target.name || event.target.id\n      ],\n    });\n  };\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true, forecastData: null, weatherData: null });\n    if (this.state.currentWeather)\n      fetch(\n        //to use the same protocol of where the app is run. in this case http to https\n        `${window.location.protocol}//api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_KEY}&units=${this.state.units}`\n      )\n        .then((res) => {\n          if (!res.ok) {\n            res.json().then((json) => {\n              throw json;\n            });\n          }\n          return res.json();\n        })\n        .then((json) => {\n          this.setState({\n            weatherData: json,\n            loading: false,\n            currentUnits: this.state.units,\n            currentCity: this.state.city,\n          });\n        })\n        .catch((error) => this.setState({ error, loading: false }));\n\n    if (this.state.forecastWeather)\n      fetch(\n        `${window.location.protocol}//api.openweathermap.org/data/2.5/forecast?q=${this.state.city}&appid=${API_KEY}&units=${this.state.units}`\n      )\n        .then((res) => {\n          if (!res.ok) {\n            res.json().then((json) => {\n              throw json;\n            });\n          }\n          return res.json();\n        })\n        .then((json) => {\n          this.setState({\n            forecastData: json,\n            loading: false,\n            currentUnits: this.state.units,\n            currentCity: this.state.city,\n          });\n        })\n        .catch((error) => this.setState({ error, loading: false }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Loader open={this.state.loading} />\n        <header className=\"App-header\">\n          <Form onSubmit={this.onSubmit}>\n            <Input\n              label=\"City: \"\n              value={this.state.city}\n              id=\"city\"\n              placeholder=\"Enter city\"\n              onChange={this.onChange}\n            />\n            <br />\n            <Input\n              label=\"Current Weather\"\n              id=\"currentWeather\"\n              type=\"checkbox\"\n              onChange={this.onChangeCheckbox}\n              checked={this.state.currentWeather}\n            />\n            <br />\n\n            <Input\n              label=\"Forecast Weather\"\n              id=\"forecastWeather\"\n              type=\"checkbox\"\n              onChange={this.onChangeCheckbox}\n              checked={this.state.forecastWeather}\n            />\n            <br />\n            <Input\n              label=\"Imperial units\"\n              checked={\"imperial\" === this.state.units}\n              id=\"ImperialUnits\"\n              type=\"radio\"\n              name=\"units\"\n              value=\"imperial\"\n              onChange={this.onChange}\n            />\n\n            <br />\n            <Input\n              label=\"Metric units\"\n              checked={\"metric\" === this.state.units}\n              id=\"MetricUnit\"\n              type=\"radio\"\n              name=\"units\"\n              value=\"metric\"\n              onChange={this.onChange}\n            />\n\n            <br />\n            <Input\n              className=\"submit\"\n              disabled={\n                !(this.state.currentWeather || this.state.forecastWeather) ||\n                this.state.loading ||\n                !this.state.city\n              }\n              type=\"submit\"\n              value={this.state.loading ? \"Loading...\" : \"Submit\"}\n            />\n          </Form>\n          {this.state.weatherData && (\n            <CurrentWeather\n              city={this.state.currentCity}\n              data={this.state.weatherData}\n              units={this.state.currentUnits}\n            />\n          )}\n          {this.state.forecastData && (\n            <ForecastWeather\n              data={this.state.forecastData}\n              city={this.state.currentCity}\n              units={this.state.currentUnits}\n            />\n          )}\n          {this.state.error && (\n            <p>\n              SOMETHING SOMEWHERE WENT TERRIBLY WRONG.\n              {this.state.error.message}\n            </p>\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}